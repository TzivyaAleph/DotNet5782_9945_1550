<Window x:Class="PL.DroneView" WindowStartupLocation="CenterScreen"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:PL"
        xmlns:Converters="clr-namespace:PL.Converters"
        mc:Ignorable="d"
        Title="DroneView" Height="450" Width="800">
    <Window.Resources>
        <Converters:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter"/>
        <Converters:DroneStatusToBoolConverter x:Key="DroneStatusToBoolConverter"/>
        <Converters:DroneStatusToBoolConverterForRelease x:Key="DroneStatusToBoolConverterForRelease"/>
        <Converters:DroneStatusToBoolConverterForPickUp x:Key="DroneStatusToBoolConverterForPickUp"/>
    </Window.Resources>
    <Window.Background>
        <ImageBrush ImageSource="Images/droneBackground.jpg"></ImageBrush>
    </Window.Background>
    <Grid x:Name="grMain">
        <Grid.Background>
            <ImageBrush x:Name="myImage"  ></ImageBrush>
        </Grid.Background>
        <Grid x:Name="GridNewDrone" Visibility="{Binding IsUpdateMode, Converter={StaticResource BoolToVisibilityConverter}, ConverterParameter=Invert}" AllowDrop="True" d:IsHidden="True">
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="auto"/>
            </Grid.RowDefinitions>
            <Grid x:Name="gridForLayout">
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="4*"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Label x:Name="labelAdd" FontWeight="Bold" Content="Add New Drone" FontSize="25" HorizontalContentAlignment="Left" Grid.Column="2" />
                <Label Content="ID:" FontWeight="Bold" HorizontalAlignment="Left" VerticalAlignment="Center" Grid.Column="0" Grid.Row="1" />
                <Label Content="Battery:" FontWeight="Bold" HorizontalAlignment="Left" VerticalAlignment="Center" Grid.Column="0" Grid.Row="2" />
                <Label Content="Max Weight:" FontWeight="Bold" HorizontalAlignment="Left" VerticalAlignment="Center" Grid.Column="0" Grid.Row="3" />
                <Label Content="Model:" FontWeight="Bold" HorizontalAlignment="Left" VerticalAlignment="Center" Grid.Column="0" Grid.Row="4" />
                <Label Content="Status:" FontWeight="Bold" HorizontalAlignment="Left" VerticalAlignment="Center" Grid.Column="0" Grid.Row="5" />
                <Label x:Name="labelDelievery" FontWeight="Bold" Content="Delievery:" VerticalAlignment="Center" Grid.Column="0" Grid.Row="6" />
                <Label Content="Longitude:" FontWeight="Bold" HorizontalAlignment="Left" VerticalAlignment="Center" Grid.Column="0" Grid.Row="7" />
                <Label Content="Lattitude:" FontWeight="Bold" HorizontalAlignment="Left" VerticalAlignment="Center" Grid.Column="0" Grid.Row="8" />
                <TextBox x:Name="txtID" MaxLength="4" Text="{Binding DroneToAdd.Id}" Grid.Row="1" Grid.Column="1" HorizontalAlignment="Stretch" VerticalAlignment="Center"/>
                <TextBox x:Name="txtBattery" Text="0"  Grid.Row="2" Grid.Column="1" HorizontalAlignment="Stretch" VerticalAlignment="Center" IsReadOnly="True" />
                <ComboBox Name="CBXWeight" ItemsSource="{Binding WeightOptions}" SelectedItem="{Binding DroneToAdd.Weight}" HorizontalAlignment="Stretch" VerticalAlignment="Center" Grid.Row="3" Grid.Column="1"></ComboBox>
                <TextBox x:Name="txtModel" Text="{Binding DroneToAdd.Model}" Grid.Row="4" Grid.Column="1" HorizontalAlignment="Stretch" VerticalAlignment="Center" />
                <ComboBox x:Name="CBXStatus" ItemsSource="{Binding Statuses}" SelectedItem="{Binding DroneToAdd.DroneStatuses}" HorizontalAlignment="Stretch" VerticalAlignment="Center" Grid.Row="5" Grid.Column="1" IsEnabled="False" />
                <TextBox x:Name="txtDelievery" Text="0"  Grid.Row="6" Grid.Column="1" HorizontalAlignment="Stretch" VerticalAlignment="Center" IsReadOnly="True" />
                <TextBox x:Name="txtLongitude"  Text="0" Grid.Row="7" Grid.Column="1" HorizontalAlignment="Stretch" VerticalAlignment="Center" IsReadOnly="True" />
                <TextBox x:Name="txtLatitude" Text="0" Grid.Row="8" Grid.Column="1" HorizontalAlignment="Stretch" VerticalAlignment="Center" IsReadOnly="True" />
                <Label x:Name="txtStationName" FontWeight="Bold" Content="Choose station to put the drone in it: " Grid.Row="3" Grid.Column="2" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                <ComboBox Name="cbxStations" ItemsSource="{Binding Names}" SelectedItem="{Binding Names}" VerticalAlignment="Center"  Grid.Row="4" Grid.Column="2" Margin="110,0,106,0" />
                <Button x:Name="addButton" Content="Add"  FontSize="30" Click="addButton_Click" Grid.Column="3" Grid.Row="6"/>
                <Button x:Name="ButtonCancel" Content="cancel" FontSize="30" Click="ButtonCancel_Click" Grid.Column="3" Grid.Row="7"/>
            </Grid>
        </Grid>
        <Grid x:Name="GridUpdateDrone" Visibility="{Binding IsUpdateMode, Converter={StaticResource BoolToVisibilityConverter}}">
            <Grid.RowDefinitions>
                <RowDefinition Height="9*"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Grid x:Name="GridForLayout">
                <Grid.RowDefinitions>
                    <RowDefinition/>
                    <RowDefinition/>
                    <RowDefinition/>
                    <RowDefinition/>
                    <RowDefinition/>
                    <RowDefinition/>
                    <RowDefinition/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Label Content="ID:" FontWeight="Bold" HorizontalAlignment="Left" VerticalAlignment="Center" Grid.Column="0" Grid.Row="0" />
                <Label Content="Battery:" FontWeight="Bold" HorizontalAlignment="Left" VerticalAlignment="Center" Grid.Column="0" Grid.Row="1" />
                <Label Content="Max Weight:" FontWeight="Bold" HorizontalAlignment="Left" VerticalAlignment="Center" Grid.Column="0" Grid.Row="2" />
                <Label Content="Model:" FontWeight="Bold" HorizontalAlignment="Left" VerticalAlignment="Top" Grid.Column="0" Grid.Row="3" Margin="0,17,0,0" />
                <Label Content="Status:" FontWeight="Bold" HorizontalAlignment="Left" VerticalAlignment="Center" Grid.Column="0" Grid.Row="4" />
                <Label Content="Longitude:" FontWeight="Bold" HorizontalAlignment="Left" VerticalAlignment="Center" Grid.Column="0" Grid.Row="5" />
                <Label Content="Lattitude:" FontWeight="Bold" HorizontalAlignment="Left" VerticalAlignment="Center" Grid.Column="0" Grid.Row="6" />
                <TextBox Text="{Binding SelectedDrone.Id}" Grid.Row="0" Grid.Column="1" HorizontalAlignment="Stretch" VerticalAlignment="Center" IsReadOnly="True"/>
                <TextBox Text="{Binding SelectedDrone.Battery}" Width="auto" Grid.Row="1" Grid.Column="1" HorizontalAlignment="Stretch" VerticalAlignment="Center" IsReadOnly="True"/>
                <ProgressBar Value="{Binding SelectedDrone.Battery}" Grid.Row="1" Grid.Column="2" Width="100" Height="18"/>
                <ComboBox ItemsSource="{Binding WeightOptions}" SelectedItem="{Binding SelectedDrone.Weight}" HorizontalAlignment="Stretch" VerticalAlignment="Center" Grid.Row="2" Grid.Column="1"  IsEnabled="False"/>
                <TextBox Text="{Binding SelectedDrone.Model}" Grid.Row="3" Grid.Column="1" HorizontalAlignment="Stretch" VerticalAlignment="Center" IsReadOnly="False"/>
                <ComboBox ItemsSource="{Binding Statuses}" SelectedItem="{Binding SelectedDrone.DroneStatuses}" HorizontalAlignment="Stretch" VerticalAlignment="Center" Grid.Row="4" Grid.Column="1" IsEnabled="False"/>
                <TextBox Text="{Binding SelectedDrone.CurrentLocation.Longitude}" Grid.Row="5" Grid.Column="1" HorizontalAlignment="Stretch" VerticalAlignment="Center" IsReadOnly="True"/>
                <TextBox Text="{Binding SelectedDrone.CurrentLocation.Latitude}" Grid.Row="6" Grid.Column="1" HorizontalAlignment="Stretch" VerticalAlignment="Center" IsReadOnly="True"/>
            </Grid>
            <Grid x:Name="gridForParcelTextBlock" Grid.Column="1">
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="3*"/>
                </Grid.RowDefinitions>
                <Label Content="Parcel In Delivery:" HorizontalAlignment="Left" VerticalAlignment="Bottom" FontWeight="Bold" Visibility="{Binding SelectedDrone.DroneStatuses, Converter={StaticResource DroneStatusToBoolConverterForPickUp}}"/>
                <ListBox x:Name="parcelView" Grid.Row="1" HorizontalAlignment="Left" VerticalAlignment="Top" Visibility="{Binding SelectedDrone.DroneStatuses, Converter={StaticResource DroneStatusToBoolConverterForPickUp}}" ItemsSource="{Binding ParcelsInDrone}" MouseDoubleClick="parcelView_MouseDoubleClick"></ListBox>
                <!--<TextBox x:Name="parcelViewInTextBox" Text="{Binding SelectedDrone.ParcelInDelivery}" Width="230" Height="300" Grid.Row="1" HorizontalAlignment="Left" VerticalAlignment="Top" Visibility="{Binding SelectedDrone.DroneStatuses, Converter={StaticResource DroneStatusToBoolConverterForPickUp}}" ></TextBox>-->
            </Grid>
            <StackPanel Grid.Row="1" Grid.ColumnSpan="2" Orientation="Horizontal" HorizontalAlignment="Left" Width="700">
                <Button x:Name="updateModelBtn" Content="Update" Width="100" Click="UpdateModelBtn_Click" Visibility="{Binding SelectedDrone.IsDeleted, Converter={StaticResource BoolToVisibilityConverter}, ConverterParameter=Invert}"/>
                <Button x:Name="deleteDrone" Content="Delete Drone" Width="100" Click="deleteDrone_Click" Visibility="{Binding SelectedDrone.IsDeleted, Converter={StaticResource BoolToVisibilityConverter}, ConverterParameter=Invert}"/>
                <Button x:Name="closeWindowBtn" Content="Close" Width="100" Click="CloseWindowBtn_Click"/>
                <Button x:Name="DroneCharging" Width="100" Visibility="{Binding SelectedDrone.DroneStatuses,Converter={StaticResource DroneStatusToBoolConverterForRelease}, ConverterParameter=visibilityForCharging}" Click="DroneCharging_Click">
                    <Button.Style>
                        <Style TargetType="Button">
                            <Setter Property="Content" Value="Charge Drone"></Setter>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsReleaseDroneEnabled}" Value="true">
                                    <Setter Property="Content" Value="Release Drone"></Setter>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
                <Button x:Name="DroneActions" Width="100" Visibility="{Binding SelectedDrone.DroneStatuses,Converter={StaticResource DroneStatusToBoolConverterForRelease}, ConverterParameter=visibility}" Click="DroneActions_Click">
                    <Button.Style>
                        <Style TargetType="Button">
                            <Setter Property="Content" Value="Send To Delivery"></Setter>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsPickUpEnabled}" Value="true">
                                    <Setter Property="Content" Value="Pick Up"></Setter>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding IsDeliverParcelEnabled}" Value="true">
                                    <Setter Property="Content" Value="Deliver Parcel"></Setter>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
                <Button x:Name="automatic" Content="Automatic" Click="automatic_Click" Width="100" Visibility="{Binding IsAutomaticMode, Converter={StaticResource BoolToVisibilityConverter}, ConverterParameter=Invert}"/>
                <Button x:Name="stopAutomatic" Content="Stop Automatic" Width="100" Visibility="{Binding IsAutomaticMode, Converter={StaticResource BoolToVisibilityConverter}}" Click="stopAutomatic_Click"/>
            </StackPanel>
        </Grid>
    </Grid>
</Window>
